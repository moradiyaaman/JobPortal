@model IEnumerable<MyApplicationViewModel>
@{
    ViewData["Title"] = "My applications";
}
@{
    var applications = Model?.ToList() ?? new System.Collections.Generic.List<MyApplicationViewModel>();
    System.Func<string, string> statusPalette = status =>
    {
        if (string.IsNullOrWhiteSpace(status))
        {
            return "bg-slate-100 text-slate-600";
        }

        var normalized = status.ToLowerInvariant();
        if (normalized.Contains("hire") || normalized.Contains("offer"))
        {
            return "bg-emerald-100 text-emerald-700";
        }
        if (normalized.Contains("interview") || normalized.Contains("shortlist") || normalized.Contains("review"))
        {
            return "bg-primary-50 text-primary-600";
        }
        if (normalized.Contains("rejected") || normalized.Contains("closed"))
        {
            return "bg-rose-100 text-rose-600";
        }
        return "bg-slate-100 text-slate-600";
    };
}

<section class="flex flex-col gap-3 sm:flex-row sm:items-center sm:justify-between">
    <div>
        <h1 class="text-3xl font-semibold text-slate-900">Application tracker</h1>
        <p class="text-sm text-slate-500">Monitor every pipeline stage and jump back into roles in one click.</p>
    </div>
    <a asp-action="Index" class="btn btn-secondary">Browse jobs</a>
</section>

@if (!applications.Any())
{
    <div class="mt-10 rounded-3xl border border-dashed border-slate-200 bg-white/80 px-6 py-12 text-center shadow-sm">
        <h3 class="text-lg font-semibold text-slate-800">No applications yet</h3>
        <p class="mt-2 text-sm text-slate-500">Apply to a role to see it tracked here along with its status updates.</p>
        <a asp-action="Index" class="mt-6 inline-flex items-center gap-2 rounded-xl bg-primary-600 px-5 py-2.5 text-sm font-semibold text-white shadow-sm transition hover:bg-primary-700">
            Find your next role
            <span class="material-symbols-rounded text-base">arrow_outward</span>
        </a>
    </div>
}
else
{
    <div class="mt-10 rounded-3xl border border-slate-200 bg-white/95 shadow-lg ring-1 ring-slate-100">
        <div class="flex flex-col gap-4 border-b border-slate-100 px-6 py-6 sm:flex-row sm:items-center sm:justify-between">
            <div>
                <p class="text-sm font-medium text-slate-500">@applications.Count application@(applications.Count == 1 ? "" : "s") tracked</p>
                <p class="text-xs text-slate-400">Status badges update automatically as companies respond.</p>
            </div>
            <div class="flex flex-wrap items-center gap-2 text-xs text-slate-500">
                <span class="inline-flex items-center gap-1 rounded-full bg-primary-50 px-3 py-1">Active <span class="material-symbols-rounded text-sm text-primary-500">task_alt</span></span>
                <span class="inline-flex items-center gap-1 rounded-full bg-emerald-100 px-3 py-1 text-emerald-700">Offer <span class="material-symbols-rounded text-sm text-emerald-600">sparkle</span></span>
                <span class="inline-flex items-center gap-1 rounded-full bg-rose-100 px-3 py-1 text-rose-600">Closed <span class="material-symbols-rounded text-sm text-rose-500">block</span></span>
            </div>
        </div>

        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-slate-100">
                <thead class="bg-slate-50/70 text-left text-xs font-semibold uppercase tracking-wide text-slate-500">
                    <tr>
                        <th scope="col" class="px-6 py-4">Role</th>
                        <th scope="col" class="px-6 py-4">Company</th>
                        <th scope="col" class="px-6 py-4">Location</th>
                        <th scope="col" class="px-6 py-4">Applied</th>
                        <th scope="col" class="px-6 py-4">Status</th>
                        <th scope="col" class="px-6 py-4 text-right">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-slate-100 bg-white text-sm text-slate-600">
                    @foreach (var application in applications)
                    {
                        <tr class="align-top hover:bg-primary-50/30">
                            <td class="px-6 py-5">
                                <div class="flex flex-col gap-1">
                                    <a asp-action="Details" asp-route-id="@application.JobId" class="text-base font-semibold text-slate-900 hover:text-primary-600">@application.JobTitle</a>
                                    @if (!string.IsNullOrWhiteSpace(application.CoverLetter))
                                    {
                                        <button type="button" class="inline-flex items-center gap-1 text-xs font-medium text-primary-600 hover:text-primary-700" data-action="toggle-cover" data-target="cover-@application.JobId">
                                            View cover letter
                                            <span class="material-symbols-rounded text-sm">expand_more</span>
                                        </button>
                                    }
                                </div>
                            </td>
                            <td class="px-6 py-5">
                                <div class="font-medium text-slate-700">@application.CompanyName</div>
                            </td>
                            <td class="px-6 py-5">@application.Location</td>
                            <td class="px-6 py-5 text-slate-500">@application.AppliedAt.ToString("MMM d, yyyy")</td>
                            <td class="px-6 py-5">
                                <span class="pill @statusPalette(application.Status)">@(!string.IsNullOrWhiteSpace(application.Status) ? application.Status : "Submitted")</span>
                            </td>
                            <td class="px-6 py-5 text-right">
                                <a asp-action="Details" asp-route-id="@application.JobId" class="inline-flex items-center gap-2 rounded-xl border border-slate-200 px-4 py-2 text-xs font-semibold text-slate-600 transition hover:border-primary-200 hover:text-primary-600">
                                    View listing
                                    <span class="material-symbols-rounded text-base">arrow_outward</span>
                                </a>
                            </td>
                        </tr>
                        @if (!string.IsNullOrWhiteSpace(application.CoverLetter))
                        {
                            <tr id="cover-@application.JobId" class="hidden">
                                <td colspan="6" class="px-6 pb-5">
                                    <div class="rounded-2xl border border-slate-200 bg-slate-50/70 p-5 text-sm text-slate-600">
                                        <p class="text-xs font-semibold uppercase tracking-wide text-slate-400">Cover letter</p>
                                        <p class="mt-3 whitespace-pre-line leading-relaxed">@application.CoverLetter</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.querySelectorAll('[data-action="toggle-cover"]').forEach(function (button) {
            button.addEventListener('click', function () {
                const targetId = button.getAttribute('data-target');
                const targetRow = document.getElementById(targetId);
                if (!targetRow) return;

                const icon = button.querySelector('.material-symbols-rounded');
                const isHidden = targetRow.classList.contains('hidden');
                targetRow.classList.toggle('hidden');
                if (icon) {
                    icon.textContent = isHidden ? 'expand_less' : 'expand_more';
                }
            });
        });
    </script>
}
